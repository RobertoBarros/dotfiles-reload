{
  // ===== Editor: Aparência e comportamento =====
  "editor.bracketPairColorization.enabled": true, // Destaca pares de colchetes para facilitar leitura de blocos
  "editor.detectIndentation": false, // Sempre usa o tamanho de tab definido, ignora autodetecção do arquivo
  "editor.fontLigatures": true, // Usa ligaduras de fonte para melhorar leitura (ex: !=, ->)
  "editor.fontFamily": "JetBrainsMono Nerd Font, Monaco, 'Courier New', monospace",
  "editor.fontSize": 16, // Tamanho da fonte maior para facilitar leitura
  "editor.foldingStrategy": "indentation", // Dobra de código baseada na indentação (útil para Ruby, JS, etc)
  "editor.formatOnSave": true, // Formata automaticamente ao salvar, mantém código padronizado
  "editor.guides.bracketPairs": true, // Mostra linhas guias entre colchetes, facilita localizar blocos
  "editor.inlineSuggest.enabled": true, // Ativa sugestões inline tipo GitHub Copilot
  "editor.minimap.enabled": false, // Desativa minimapa lateral para evitar poluição visual
  "editor.quickSuggestions": {
    "other": "on",
    "strings": "on"
  },
  "editor.renderControlCharacters": true, // Mostra caracteres de controle invisíveis
  "editor.rulers": [80, 120], // Linhas guia para respeitar limites de linha (padrão de projetos)
  "editor.showFoldingControls": "always", // Sempre mostra os ícones de folding (expande/contrai blocos)
  "editor.snippetSuggestions": "top", // Snippets sempre no topo das sugestões para acelerar digitação
  "editor.tabSize": 2, // 2 espaços para identação, padrão frontend e Ruby
  "editor.wordWrap": "on", // Quebra de linha automática, evita scroll lateral

  // ===== ERB/HTML/JS/JSON/CSS: formatters =====
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[erb]": {
    "editor.defaultFormatter": "aliariff.vscode-erb-beautify",
    "editor.formatOnSave": true
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[ruby]": {},

  // ===== RubyLSP =====
  "rubyLsp.enabledFeatures": {
    "codeActions": true, // Sugestões automáticas de correção/refatoração
    "codeLens": true, // Informações contextuais direto no editor
    "completion": true, // Autocomplete avançado
    "definition": true, // Vai para definição do método/classe
    "diagnostics": true, // Warnings/erros em tempo real
    "documentHighlights": true, // Destaque de símbolos no arquivo
    "documentLink": true, // Suporte a links contextuais
    "documentSymbols": true, // Mostra classes/métodos em árvore
    "foldingRanges": true, // Suporte a folding inteligente
    "formatting": true, // Formata o código Ruby
    "hover": true, // Mostra doc ao passar o mouse
    "inlayHint": true, // Dicas de tipos, parâmetros etc. inline
    "onTypeFormatting": true, // Formatação automática enquanto digita
    "selectionRanges": true, // Expande seleção por contexto sintático
    "semanticHighlighting": true, // Realce semântico extra
    "signatureHelp": true, // Mostra parâmetros de métodos/funções
    "workspaceSymbol": true // Busca símbolos no projeto inteiro
  }, // Ativa todas as features úteis do LSP para Ruby
  "rubyLsp.rubyVersionManager": {
    "identifier": "mise" // Usa mise para gerenciar versões Ruby
  },

  // ===== Emmet =====
  "emmet.includeLanguages": {
    "erb": "html" // Permite autocomplete do Emmet em arquivos ERB
  },
  "emmet.showSuggestionsAsSnippets": true, // Mostra sugestões Emmet como snippets
  "emmet.triggerExpansionOnTab": true, // Expande abreviações Emmet ao apertar Tab

  // ===== Tailwind CSS =====
  "tailwindCSS.experimental.classRegex": ["\\bclass:\\s*['\"]([^'\"]*)['\"]"], // Permite autocomplete em variantes do Tailwind
  "tailwindCSS.includeLanguages": {
    "css": "css",
    "erb": "html",
    "html": "html",
    "javascript": "javascript"
  }, // Ativa Tailwind em vários tipos de arquivo (erb, js, etc)

  // ===== Arquivos: Associação e exclusão =====
  "files.associations": {
    "*.html.erb": "erb" // Abre arquivos .html.erb com syntax highlight correto
  },
  "files.autoSave": "onFocusChange", // Salva arquivo automaticamente ao perder foco (evita perder trabalho)
  "files.exclude": {
    ".asset-cache": true,
    ".bundle": true,
    ".ipynb_checkpoints": true,
    ".pytest_cache": true,
    ".sass-cache": true,
    ".svn": true,
    "**/.DS_Store": true,
    "**/.egg-info": true,
    "**/.git": true,
    "**/app/assets/svg/**": true,
    "__pycache__": true,
    "_site": true,
    "build": true,
    "coverage": true,
    "dist": true,
    "log": true,
    "node_modules": true,
    "public/packs": true,
    "tmp": true
  }, // Esconde arquivos e pastas irrelevantes do explorer
  "files.hotExit": "off", // Não tenta restaurar arquivos não salvos ao fechar VSCode
  "files.insertFinalNewline": true, // Garante linha em branco no final de cada arquivo
  "files.trimFinalNewlines": true, // Remove linhas em branco extras no final
  "files.trimTrailingWhitespace": true, // Remove espaços desnecessários ao salvar
  "files.watcherExclude": {
    "**/app/assets/svg/**": true,
    "**/audits/**": true,
    "**/coverage/**": true,
    "**/log/**": true,
    "**/node_modules/**": true,
    "**/tmp/**": true,
    "**/vendor/**": true
  }, // Ignora watcher para essas pastas/arquivos (menos uso de CPU)

  // ===== Terminal =====
  "terminal.integrated.env.linux": {}, // Variáveis de ambiente customizadas para Linux (vazio)
  "terminal.integrated.env.osx": {}, // Variáveis de ambiente customizadas para MacOS (vazio)
  "terminal.integrated.fontFamily": "JetBrainsMonoNL Nerd Font", // Usa fonte com ícones para terminal integrado
  "terminal.integrated.fontSize": 16, // Tamanho da fonte do terminal para melhor legibilidade

  // ===== Workbench (UI/UX) =====
  "workbench.colorCustomizations": {
    "tab.activeBackground": "#831911",
    "tab.activeBorder": "#FFEB3B",
    "tab.activeForeground": "#FFEB3B"
  }, // Personaliza cor de abas ativas (maior contraste/visibilidade)
  "workbench.colorTheme": "Tokyo Night", // Tema visual do VSCode
  "workbench.iconTheme": "vscode-great-icons", // Tema de ícones para arquivos e pastas
  "workbench.settings.editor": "json", // Editor de settings padrão em JSON
  "workbench.settings.openDefaultSettings": true, // Sempre abre settings defaults ao buscar configs
  "workbench.settings.useSplitJSON": true, // Editor de settings dividido em duas colunas (user/project)
  "workbench.startupEditor": "newUntitledFile", // Sempre inicia com novo arquivo vazio

  // ===== Window =====
  "window.restoreWindows": "none", // Não restaura janelas abertas na última sessão, sempre fresh start
  "window.zoomLevel": 0, // Zoom padrão (100%)

  // ===== Git =====
  "git.blame.editorDecoration.enabled": false, // Não polui o editor com info de blame do git
  "git.confirmSync": false, // Não pede confirmação ao sincronizar, agiliza workflow

  // ===== GitHub Copilot =====
  "chat.agent.enabled": true, // Ativa chat agent (se usar alguma extensão AI/Chat)
  "chat.editing.confirmEditRequestRemoval": false,
  "github.copilot.nextEditSuggestions.enabled": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": true,
    "markdown": true,
    "scminput": false,
    "html": true,
    "html.erb": true,
    "javascript": true,
    "ruby": true,
    "scss": true,
    "yaml": true
  }, // Define onde o Copilot pode sugerir código/texto

  // ===== Outros =====
  "security.workspace.trust.untrustedFiles": "open",
  "explorer.confirmDelete": false
}
